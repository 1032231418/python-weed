*  python-weed. what is it?
  ============
  a python module of weed-fs (https://code.google.com/p/weed-fs/).


*  Note:
  ============
  (note: if there is a "README.rst" file, it's a softlink of "README")


*  Install:
  ============
  pip install python-weed

  Or download the tarbal, decompress it, then run "python setup.py install"


*  Test:
  ==========
  python setup.py test
  note: it may show the warning messages like something below:

  "test.pytest.py/_pytest.core:147: UserWarning: Module _pytest was already imported from test.pytest.py/_pytest, but /usr/local/lib/python2.6/dist-packages is being added to sys.path"

  It does no harm, just ommit it.


*  Shortely: 
  =================================================================
  """
  Weed-FS is a simple and highly scalable distributed file system. There are two objectives:

      to store billions of files!
          to serve the files fast! 

          Instead of supporting full POSIX file system semantics, Weed-FS choose to implement only a key~file mapping. Similar to the word "NoSQL", you can call it as "NoFS". 
  see detail in (https://code.google.com/p/weed-fs/)

  this is a python module for weed-fs.




*  Usage: (sample)
  ========================


#   In [1]: from jsend import RSuccess, RFail, RError   # from jsend import *
# 
#   In [2]: rs = RSuccess()
# 
#   In [3]: rs
#   Out[3]: {'data': {}, 'status': 'success'}
# 
#   In [4]: rs.data['post'] = {'username' : 'you', 'password' : 'pwd' }
# 
#   In [5]: rs
#   Out[5]: {'data': {'post': {'password': 'pwd', 'username': 'you'}}, 'status': 'success'}
# 
#   In [6]: rf = RFail()
# 
#   In [7]: rf
#   Out[7]: {'data': {}, 'status': 'fail'}
# 
#   In [8]: rf.data['why'] = 'You have entered the wrong number'
# 
#   In [9]: rf
#   Out[9]: {'data': {'why': 'You have entered the wrong number'}, 'status': 'fail'}
# 
#   In [10]: rr = RError
# 
#   In [11]: rr
#   Out[11]: jsend.jsend.RError
# 
#   In [12]: rr = RError()
# 
#   In [13]: rr
#   Out[13]:
#   {'code': {},
#    'data': {},
#    'message': 'error occurres during processing',
#    'status': 'error'}
# 
#   In [14]: rr.data['stack'] = 'stack overflows'
# 
#   In [15]: rr.code['return_code'] = 1
# 
#   In [16]: rr
#   Out[16]:
#   {'code': {'return_code': 1},
#    'data': {'stack': 'stack overflows'},
#    'message': 'error occurres during processing',
#    'status': 'error'}
# 
